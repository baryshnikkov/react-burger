{
	"env": {
		"browser": true,
		"es2021": true
	},
	"settings": {
		"react": {
			"version": "detect"
		},
		"import/resolver": {
			"typescript": {
				"alwaysTryTypes": true
			}
		}
	},
	"extends": [
		"plugin:react/recommended",
		"standard-with-typescript",
		"plugin:boundaries/recommended",
		"@feature-sliced"
	],
	"overrides": [],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaFeatures": {
			"jsx": true
		},
		"ecmaVersion": "latest",
		"sourceType": "module"
	},
	"plugins": ["react", "@typescript-eslint", "boundaries"],
	"rules": {
		"react/react-in-jsx-scope": "off",
		"@typescript-eslint/semi": "off",
		"@typescript-eslint/strict-boolean-expressions": "off",
		"no-tabs": "off",
		"@typescript-eslint/indent": ["error", "tab"],
		"@typescript-eslint/comma-dangle": "off",
		"@typescript-eslint/member-delimiter-style": "off",
		"@typescript-eslint/explicit-function-return-type": "off",
		"@typescript-eslint/ban-ts-comment": "off",
		"@typescript-eslint/no-floating-promises": "off",
		"@typescript-eslint/no-non-null-assertion": "warn",
		"@typescript-eslint/no-non-null-asserted-optional-chain": "warn",
		"@typescript-eslint/naming-convention": "warn",
		"@typescript-eslint/no-unused-vars": "warn",
		"@typescript-eslint/no-invalid-void-type": "off",
		"array-callback-return": "off",
		"n/handle-callback-err": "off",
		"@typescript-eslint/space-before-function-paren": "off",
		"import/no-internal-modules": "off",
		"import/order": [
			"error",
			{
				"alphabetize": { "order": "asc", "caseInsensitive": true },
				"newlines-between": "always",
				"pathGroups": [
					{
						"group": "internal",
						"position": "after",
						"pattern": "@/processes/**"
					},
					{
						"group": "internal",
						"position": "after",
						"pattern": "@/pages/**"
					},
					{
						"group": "internal",
						"position": "after",
						"pattern": "@/widgets/**"
					},
					{
						"group": "internal",
						"position": "after",
						"pattern": "@/features/**"
					},
					{
						"group": "internal",
						"position": "after",
						"pattern": "@/entities/**"
					},
					{
						"group": "internal",
						"position": "after",
						"pattern": "@/shared/**"
					}
				],
				"pathGroupsExcludedImportTypes": ["builtin"],
				"groups": ["builtin", "external", "internal", "parent", "sibling", "index"]
			}
		]
	}
}
